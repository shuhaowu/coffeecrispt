import subprocess
from coffeecrispt import deps

from slimit import minify as jsminify

class CompileError(Exception): pass

HEADER = """// Generated via coffeecrispt

window['require'] = window['module'] = window['namespace'] = function(name){
  var levels = name.split('.');
  var _module = window;
  for (var i=0; i<levels.length; i++){
    if (_module[levels[i]] === undefined)
      _module[levels[i]] = {};
    _module = _module[levels[i]];
  }
  return _module;
};


"""

def compile_one(path):

  process = subprocess.Popen("coffee -pc %s" % repr(path),
                             shell=True,
                             stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)

  success = not bool(process.wait())
  if success:
    return True, process.communicate()[0].replace("// Generated by CoffeeScript 1.3.3", "// %s" % path)
  else:
    return False, process.communicate()[1].split("\n")[0] + " for file %s" % path


def compile_project(path, minify=False):
  order, modulepaths = deps.get_all_modules_sorted(path)
  modules = []
  output = HEADER

  for module_name in order:
    success, payload = compile_one(modulepaths[module_name])
    if success:
      output += payload
    else:
      raise CompileError(payload)

    output += "\n\n"

  if minify:
    return jsminify(output, mangle=True, mangle_toplevel=True).replace("(function(){}).call(this);", "")
  else:
    return output
